version: '3.8'

services:
  postgres:
    image: postgres:15
    container_name: postgres
    restart: always
    ports:
      - "5432:5432"
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: marketplace
    volumes:
      - postgres_data:/var/lib/postgresql/data

  clickhouse:
    image: clickhouse/clickhouse-server:latest
    container_name: clickhouse
    ports:
      - "8123:8123"
      - "9000:9000"
    environment:
      CLICKHOUSE_DB: default
      CLICKHOUSE_USER: default
      CLICKHOUSE_DEFAULT_ACCESS_MANAGEMENT: 1
    volumes:
      - clickhouse_data:/var/lib/clickhouse  # Хранение данных ClickHouse в томе

  fastapi:
    build: ./fastapi
    container_name: fastapi
    ports:
      - "8000:8000"
    environment:
      DATABASE_URL: "clickhouse://default:@clickhouse:8123/default"
      REDIS_HOST: "redis_cache"  # Указываем контейнер Redis как хост
      REDIS_PORT: "6379"         # Порт Redis
      RABBITMQ_HOST: "rabbitmq"  # Указываем хост для RabbitMQ
      RABBITMQ_PORT: "5672"      # Порт RabbitMQ
    depends_on:
      - clickhouse
      - redis
      - rabbitmq  # Зависимость от RabbitMQ

  redis:
    image: "redis:latest"
    container_name: "redis_cache"
    ports:
      - "6379:6379"

  rabbitmq:
    image: "rabbitmq:management"
    container_name: "rabbitmq"
    ports:
      - "5672:5672"  # Порт для работы с очередями
      - "15672:15672" # Порт для доступа к веб-менеджменту RabbitMQ (HTTP UI)
    environment:
      RABBITMQ_DEFAULT_USER: user  # Устанавливаем имя пользователя
      RABBITMQ_DEFAULT_PASS: password  # Устанавливаем пароль

  celery:
    build:
      context: ./fastapi  # Путь к Dockerfile
    container_name: celery
    command: [ "celery", "-A", "app.db.celery_task", "worker", "--loglevel=info" ]
    environment:
      - CELERY_BROKER=redis://redis_cache:6379/0
      - REDIS_HOST=redis_cache
      - REDIS_PORT=6379
    depends_on:
      - redis
      - postgres

volumes:
  clickhouse_data:
  postgres_data:
